<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>异步编程 on 编程之诗</title>
    <link>http://example.org/docs/poet/server_framework/async/</link>
    <description>Recent content in 异步编程 on 编程之诗</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://example.org/docs/poet/server_framework/async/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vert.x</title>
      <link>http://example.org/docs/poet/server_framework/async/vertx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/docs/poet/server_framework/async/vertx/</guid>
      <description>Vert.x #  </description>
    </item>
    
    <item>
      <title>CompletableFuture</title>
      <link>http://example.org/docs/poet/server_framework/async/future/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/docs/poet/server_framework/async/future/</guid>
      <description>CompletableFuture #  基本概念
 Runnable：无返回值的函数 Supplier：有返回值的函数 Consumer：接受入参的函数 Function：接受入参且有返回值的函数 CompletionStage: CompletableFuture父类  API接口列表
CompletableFuture&amp;lt;Void&amp;gt; future1 = CompletableFuture.runAsync(runnable, executor);  CompletableFuture&amp;lt;Boolean&amp;gt; future2 = CompletableFuture.supplyAsync(() -&amp;gt; 1)  .thenApply(integer -&amp;gt; integer == 1); Boolean future2Res = future2.get(); 以下常用方法中凡是方法名以Async作为后缀的都是异步方法：
 runAsync(runnable, executor) ：在线程池中执行Runnable。 supplyAsync(supplier, executor） thenRun(runnable)：在当前线程中执行Runnable。 thenAccept(consumer) thenApply(function) exceptionally(function)：当发生异常时如何处理返回值。 thenCompose(function, stage)：组合两个Future。 CompletableFuture.allOf(stage..)：组合多个Future。 get()：阻塞当前线程获得结果。  一般来说通过supplyAsync()提供返回值，thenApply()或thenAccept()处理返回值，exceptionally()处理发生异常时的返回值。</description>
    </item>
    
    <item>
      <title>RxJava</title>
      <link>http://example.org/docs/poet/server_framework/async/rxjava/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/docs/poet/server_framework/async/rxjava/</guid>
      <description>RxJava #  </description>
    </item>
    
  </channel>
</rss>
