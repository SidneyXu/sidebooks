<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>关系型数据库 on 编程之诗</title>
    <link>http://example.org/docs/poet/db/sql/</link>
    <description>Recent content in 关系型数据库 on 编程之诗</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://example.org/docs/poet/db/sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL</title>
      <link>http://example.org/docs/poet/db/sql/mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/docs/poet/db/sql/mysql/</guid>
      <description>MySQL #  1、基本使用 #  1.1、查看当前所有连接 #  show processlist; 客户端如果太长时间没动静，连接器就会自动将它断开。这个时间是由参数 wait_timeout 控制的，默认值是 8 小时。
 show variables like &amp;#39;wait_timeout’; 上面返回的单位为秒。如果在连接被断开之后，客户端再次发送请求的话，就会收到一个错误提醒： Lost connection to MySQL server during query。这时候如果你要继续，就需要重连，然后再执行请求了。
2、高可用方案 #  2.1、MySQL Replication + MHA #  美团MHA MHA只负责MySQL主库的高可用。主库发生故障时，MHA会选择一个数据最接近原主库的候选主节点（这里只有一个从节点，所以该从节点即为候选主节点）作为新的主节点，并补齐和之前Dead Master 差异的Binlog。数据补齐之后，即将写VIP漂移到新主库上。
MHA脑裂问题 DB服务器的上联交换机出现了抖动，导致主库无法访问，被管理节点判定为故障，触发MHA切换，VIP被漂到了新主库上。随后交换机恢复，主库可被访问，但由于VIP并没有从主库上摘除，因此2台机器同时拥有VIP，会产生脑裂。我们对MHA Manager加入了向同机架上其他物理机的探测，通过对比更多的信息来判断是网络故障还是单机故障。
2.2、MySQL Cluster #  2.3、基于Paxos的MGR版本的MySQL #  3、性能优化 #  3.1、索引设计 #  该在哪种字段上添加索引
show index from &amp;lt;table_name&amp;gt;；   Cardinality：基数，表示字段的区分度。基数为采样统计，当变更的行数超过阀值时会触发重新采样。区分度越高索引越可能被使用。  当MySQL误用索引时
 如果explain分析，如果扫描行数rows和实际行数区别大，就执行analyze table &amp;lt;table_name&amp;gt; 对基数重新采样。 考虑修改语句。 新建一个更合适的索引，让优化器做选择。或者在某种场景下删除误用的索引。 强制使用force_index。  列的区别度越高索引收益越大。查看区分度的方法为 SELECT COUNT(DISTINCT col_name)/COUNT(*) FROM table_name。</description>
    </item>
    
  </channel>
</rss>
